name: Backend SonarQube Scan and GPT-4 Summary
on:
  push:
    branches:
    - main
  workflow_dispatch: null
jobs:
  sonar_backend_scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner
    - env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      name: Run SonarQube scan
      run: "dotnet sonarscanner begin \\\n  /k:\"backend\" \\\n  /d:sonar.login=$SONAR_TOKEN\
        \ \\\n  /d:sonar.host.url=\"http://13.89.226.182:9000\"\ndotnet build\ndotnet\
        \ sonarscanner end /d:sonar.login=$SONAR_TOKEN\n"
    - env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      name: Export SonarQube issues to JSON
      run: 'curl -s -u $SONAR_TOKEN: "http://13.89.226.182:9000/api/issues/search?componentKeys=backend"
        \

        -o sonar_issues.json

        cat sonar_issues.json

        '
    - name: Upload SonarQube issues artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-sonar-issues
        path: sonar_issues.json
    - env:
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      name: Summarize issues using Azure GPT-4
      run: "pip install jq\n\njq -c . sonar_issues.json > compact.json\n\n{\n  echo\
        \ \"I have the following SonarQube issues report in JSON format:\"\n  cat\
        \ compact.json\n  echo\n  echo \"Please help me analyze it and provide:\"\n\
        \  echo \"1. Total number of issues.\"\n  echo \"2. Breakdown by severity\
        \ (BLOCKER, CRITICAL, MAJOR, MINOR, INFO).\"\n  echo \"3. Breakdown by issue\
        \ type (BUG, VULNERABILITY, CODE_SMELL).\"\n  echo \"4. Top 5 most common\
        \ rules violated with descriptions if available.\"\n  echo \"5. Hotspot files\
        \ with most issues.\"\n} > prompt.txt\n\njq -Rn --rawfile prompt prompt.txt\
        \ '{\n  messages: [\n    {role:\"system\", content:\"You are an AI specialized\
        \ in analyzing SonarQube reports.\"},\n    {role:\"user\", content:$prompt}\n\
        \  ],\n  max_tokens:1500,\n  temperature:0\n}' > payload.json\n\ncurl -s -w\
        \ \"\\nHTTP_STATUS:%{http_code}\" -X POST \\\n  \"$AZURE_OPENAI_ENDPOINT/openai/deployments/$AZURE_OPENAI_DEPLOYMENT/chat/completions?api-version=2023-07-01-preview\"\
        \ \\\n  -H \"Content-Type: application/json\" \\\n  -H \"api-key: $AZURE_OPENAI_API_KEY\"\
        \ \\\n  -d @payload.json \\\n  > openai_raw_response.txt\n\nsed -n '$!p' openai_raw_response.txt\
        \ > openai_response.json\nSTATUS=$(tail -n1 openai_raw_response.txt | cut\
        \ -d':' -f2)\n\necho \"Azure GPT-4 HTTP Status: $STATUS\"\ncat openai_response.json\n\
        \nif [ \"$STATUS\" != \"200\" ]; then\n  echo \"::error::Azure OpenAI call\
        \ failed with status $STATUS\"\n  exit 1\nfi\n\njq -r '.choices[0].message.content'\
        \ openai_response.json > sonar_issues_summary.txt\n\necho \"===== GPT-4 SUMMARY\
        \ =====\"\ncat sonar_issues_summary.txt\n"
    - name: Upload GPT-4 summary artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-sonar-issues-summary
        path: sonar_issues_summary.txt
    - if: always()
      name: Upload debug artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openai-debug-info
        path: 'prompt.txt

          payload.json

          openai_raw_response.txt

          openai_response.json

          '
    - env:
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      name: Summarize SonarQube Issues with GPT-4
      run: "\npip install jq\n\njq -c . sonar_issues.json > compact.json\n\nPROMPT=$(cat\
        \ compact.json | jq -sR .)\n\ncurl -X POST \"$AZURE_OPENAI_ENDPOINT/openai/deployments/$AZURE_OPENAI_DEPLOYMENT/chat/completions?api-version=2024-02-15-preview\"\
        \ \\\n  -H \"Content-Type: application/json\" \\\n  -H \"api-key: $AZURE_OPENAI_API_KEY\"\
        \ \\\n  -d \"{\n    \\\"messages\\\": [\n      {\\\"role\\\": \\\"system\\\
        \", \\\"content\\\": \\\"You are a security-focused code review assistant.\\\
        \"},\n      {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"I have the following\
        \ SonarQube issues report in JSON format: $PROMPT\\n\\nPlease help me analyze\
        \ it and provide:\\n1. Total number of issues.\\n2. Breakdown by severity\
        \ (BLOCKER, CRITICAL, MAJOR, MINOR, INFO).\\n3. Breakdown by issue type (BUG,\
        \ VULNERABILITY, CODE_SMELL).\\n4. Top 5 most common rules violated.\\\"}\n\
        \    ],\n    \\\"max_tokens\\\": 1024\n  }\"\n"
